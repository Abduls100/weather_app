name: Deploy to ECS via GitHub Actions

on:
  push:
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO_NAME: <erc-repo-for-app>
  ECS_CLUSTER_NAME: <flask-app-ecs-cluster>
  ECS_SERVICE_NAME: <flask-app-ecs-service>
  TASK_DEFINITION_NAME: <flask-app-task-def>

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:latest
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Update ECS Task Definition with new image
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.TASK_DEFINITION_NAME }} \
            --query "taskDefinition | {
              family: family,
              taskRoleArn: taskRoleArn,
              executionRoleArn: executionRoleArn,
              networkMode: networkMode,
              containerDefinitions: containerDefinitions,
              requiresCompatibilities: requiresCompatibilities,
              cpu: cpu,
              memory: memory
            }" > taskdef.json

          cat taskdef.json | \
            jq 'del(.taskRoleArn | select(. == null)) | del(.executionRoleArn | select(. == null))' | \
            jq --arg IMAGE "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE' > new-taskdef.json

          aws ecs register-task-definition --cli-input-json file://new-taskdef.json

      - name: Deploy updated task to ECS service
        run: |
          NEW_REVISION=$(aws ecs describe-task-definition \
            --task-definition ${{ env.TASK_DEFINITION_NAME }} \
            --query "taskDefinition.revision" \
            --output text)

          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER_NAME }} \
            --service ${{ env.ECS_SERVICE_NAME }} \
            --task-definition ${{ env.TASK_DEFINITION_NAME }}:$NEW_REVISION \
            --force-new-deployment
